
package codigo;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.nio.file.Files;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setResizable(false);
        
    }
    
    // analizar lexico
    private void analizarLexico() throws IOException{
        int cont = 1;
        
        String exp = (String) txt_file.getText();
        Lexer lexer = new Lexer(new StringReader(exp));
        String resultado = "LINEA " + cont + "\t\t\tSIMBOLO\n";
        while (true){
            Tokens token = lexer.yylex();
            if(token == null){
                txt_lex.setText(resultado);
                return;
            }
            
            switch(token){
                case Linea:
                    cont++;
                    resultado += "LINEA " + cont + "\n";
                    break;
                case Comillas:
                    resultado += " <comillas>\t\t" + lexer.lexeme + "\n";
                    break;
                case Comilla:
                    resultado += " <comilla sim>\t\t" + lexer.lexeme + "\n";
                    break;
                case Int:
                    resultado += " <reservada int>\t\t" + lexer.lexeme + "\n";
                    break;
                case Char:
                    resultado += " <reservada char\t\t" + lexer.lexeme + "\n";
                    break;
                case If:
                    resultado += " <reservada if>\t\t" + lexer.lexeme + "\n";
                    break;
                case Else:
                    resultado += " <reservada else>\t\t" + lexer.lexeme + "\n";
                    break;
                case While:
                    resultado += " <reservada while>\t\t" + lexer.lexeme + "\n";
                    break;
                case Igual:
                    resultado += " <igual>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Suma:
                    resultado += " <suma>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Resta:
                    resultado += " <resta>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Multiplicacion:
                    resultado += " <multiplicacion>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Division:
                    resultado += " <division>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Parentesis_a:
                    resultado += " <parentesis a>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Parentesis_c:
                    resultado += " <parentesis c>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Llave_a:
                    resultado += " <llave a>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Llave_c:
                    resultado += " <llave c>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Main:
                    resultado += " <main>\t\t\t"+ lexer.lexeme + "\n";
                    break;
                case Void: 
                    resultado += " <void>\t\t\t" + lexer.lexeme + "\n";
                    break;
                case P_coma:
                    resultado += " <punto y coma>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Identificador:
                    resultado += " <identificador>\t\t"+ lexer.lexeme + "\n";
                    break;
                case Numero:
                    resultado += " <numero>\t\t"+ lexer.lexeme + "\n";
                    break;
                case ERROR:
                    resultado += " <NO definido>\t\t\n";
                    break;
                default:
                    resultado += " <" + lexer.lexeme + ">\n";
                    break;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panel_lexico = new javax.swing.JPanel();
        btn_abrir = new javax.swing.JButton();
        btn_analizarLex = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_file = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_lex = new javax.swing.JTextArea();
        btn_limpiarLex = new javax.swing.JButton();
        panel_sintactico = new javax.swing.JPanel();
        btn_analizarSin = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_sintactico = new javax.swing.JTextArea();
        btn_limpiarSin = new javax.swing.JButton();
        panel_tabla = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_sim = new javax.swing.JTable();
        ver_tabla_sim = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_lexico.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Analizador LÃ©xico", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("JetBrainsMono NF", 0, 24))); // NOI18N

        btn_abrir.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btn_abrir.setText("Abrir archivo");
        btn_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abrirActionPerformed(evt);
            }
        });

        btn_analizarLex.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btn_analizarLex.setText("Analizar");
        btn_analizarLex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_analizarLexActionPerformed(evt);
            }
        });

        txt_file.setColumns(20);
        txt_file.setFont(new java.awt.Font("JetBrainsMonoNL NF", 0, 12)); // NOI18N
        txt_file.setRows(5);
        jScrollPane1.setViewportView(txt_file);

        txt_lex.setEditable(false);
        txt_lex.setColumns(20);
        txt_lex.setFont(new java.awt.Font("JetBrainsMonoNL NF", 0, 12)); // NOI18N
        txt_lex.setLineWrap(true);
        txt_lex.setRows(5);
        jScrollPane2.setViewportView(txt_lex);

        btn_limpiarLex.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btn_limpiarLex.setText("Limpiar");
        btn_limpiarLex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarLexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_lexicoLayout = new javax.swing.GroupLayout(panel_lexico);
        panel_lexico.setLayout(panel_lexicoLayout);
        panel_lexicoLayout.setHorizontalGroup(
            panel_lexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_lexicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_lexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_lexicoLayout.createSequentialGroup()
                        .addComponent(btn_abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(panel_lexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_lexicoLayout.createSequentialGroup()
                        .addComponent(btn_analizarLex)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_limpiarLex))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panel_lexicoLayout.setVerticalGroup(
            panel_lexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_lexicoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(panel_lexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_abrir)
                    .addComponent(btn_analizarLex)
                    .addComponent(btn_limpiarLex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_lexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        panel_sintactico.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Analizador SintÃ¡ctico", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("JetBrainsMono NF", 0, 24))); // NOI18N

        btn_analizarSin.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btn_analizarSin.setText("Analizar");
        btn_analizarSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_analizarSinActionPerformed(evt);
            }
        });

        txt_sintactico.setEditable(false);
        txt_sintactico.setBackground(new java.awt.Color(40, 42, 54));
        txt_sintactico.setColumns(20);
        txt_sintactico.setFont(new java.awt.Font("JetBrainsMonoNL NF", 0, 12)); // NOI18N
        txt_sintactico.setRows(5);
        jScrollPane3.setViewportView(txt_sintactico);

        btn_limpiarSin.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btn_limpiarSin.setText("Limpiar");
        btn_limpiarSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarSinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_sintacticoLayout = new javax.swing.GroupLayout(panel_sintactico);
        panel_sintactico.setLayout(panel_sintacticoLayout);
        panel_sintacticoLayout.setHorizontalGroup(
            panel_sintacticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_sintacticoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_analizarSin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                .addComponent(btn_limpiarSin)
                .addContainerGap())
            .addComponent(jScrollPane3)
        );
        panel_sintacticoLayout.setVerticalGroup(
            panel_sintacticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_sintacticoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_sintacticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_analizarSin)
                    .addComponent(btn_limpiarSin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
        );

        panel_tabla.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla_sim.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tabla_sim);

        panel_tabla.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 390, 180));

        ver_tabla_sim.setFont(new java.awt.Font("JetBrainsMono NF", 1, 14)); // NOI18N
        ver_tabla_sim.setText("Ver tabla de simbolos");
        ver_tabla_sim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_tabla_simActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_lexico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panel_sintactico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(panel_tabla, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ver_tabla_sim, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(panel_lexico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_sintactico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(ver_tabla_sim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panel_tabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abrirActionPerformed
        // TODO add your handling code here:
        JFileChooser ch = new JFileChooser("./src/codigo/");
        ch.showOpenDialog(null);
        File file = new File(ch.getSelectedFile().getAbsolutePath());
        
        try {
            String ST = new String(Files.readAllBytes(file.toPath()));
            txt_file.setText(ST);
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_btn_abrirActionPerformed

    private void btn_analizarLexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_analizarLexActionPerformed
        try {
            // TODO add your handling code here:
            analizarLexico();
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_analizarLexActionPerformed

    private void btn_analizarSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_analizarSinActionPerformed
        // TODO add your handling code here:
        String st = txt_file.getText();
        String replace = st.replace("\n", "");
        Sintax s = new Sintax(new codigo.LexerCup(new StringReader(st)));
        try {
            s.parse();
            txt_sintactico.setText("Analisis realizado correctamente");
            txt_sintactico.setForeground(new Color(80, 250, 123));
        } catch (Exception e) {
            Symbol sym = s.getS();
            txt_sintactico.setText("Error de sintaxis. Linea: " + (sym.right + 1) + " Columna: " + (sym.left + 1) + " Texto: \"" + sym.value + "\"");
            txt_sintactico.setForeground(new Color(255, 85, 85));
        }
    }//GEN-LAST:event_btn_analizarSinActionPerformed

    private void btn_limpiarSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarSinActionPerformed
        // TODO add your handling code here:
        txt_sintactico.setText(null);
    }//GEN-LAST:event_btn_limpiarSinActionPerformed

    private void btn_limpiarLexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarLexActionPerformed
        // TODO add your handling code here:
        txt_lex.setText(null);
    }//GEN-LAST:event_btn_limpiarLexActionPerformed

    private void ver_tabla_simActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_tabla_simActionPerformed
        // TODO add your handling code here:
        TablaSimbolos tabla = new TablaSimbolos();
        Vector tablaS = tabla.getTabla();
        Object elementos[][] = tabla.devolverElementos();
        String[] columnNames = new String[]{"Nombre", "Valor", "Tipo"};
//        tabla_sim.setModel(null);
        DefaultTableModel dtm = new DefaultTableModel(); 
        dtm.setColumnIdentifiers(columnNames);
        tabla_sim.setModel(dtm);
        for (int i = 0; i < tablaS.size(); i++) {
            dtm.addRow(elementos[i]);
        }
        
        
    }//GEN-LAST:event_ver_tabla_simActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_abrir;
    private javax.swing.JButton btn_analizarLex;
    private javax.swing.JButton btn_analizarSin;
    private javax.swing.JButton btn_limpiarLex;
    private javax.swing.JButton btn_limpiarSin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel panel_lexico;
    private javax.swing.JPanel panel_sintactico;
    private javax.swing.JPanel panel_tabla;
    private javax.swing.JTable tabla_sim;
    private javax.swing.JTextArea txt_file;
    private javax.swing.JTextArea txt_lex;
    private javax.swing.JTextArea txt_sintactico;
    private javax.swing.JButton ver_tabla_sim;
    // End of variables declaration//GEN-END:variables
}
